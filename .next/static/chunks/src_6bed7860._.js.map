{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/echomind2/src/components/providers/ThemeProvider.tsx"],"sourcesContent":["'use client';\r\n\r\n// 引入 React 核心庫\r\nimport * as React from 'react';\r\n// 從 next-themes 引入主題提供者組件並重命名為 NextThemesProvider\r\nimport { ThemeProvider as NextThemesProvider } from 'next-themes';\r\n\r\n// 定義 ThemeProviderProps 類型，使用 Parameters 工具類型獲取 NextThemesProvider 的參數類型\r\ntype ThemeProviderProps = Parameters<typeof NextThemesProvider>[0];\r\n\r\n/**\r\n * ThemeProvider 組件\r\n * 這是一個包裝 next-themes 的 ThemeProvider 的自定義組件\r\n * 用於在應用程序中提供主題切換功能\r\n * \r\n * @param children - 子組件，將被包裹在主題提供者內\r\n * @param props - 其他傳遞給 NextThemesProvider 的屬性\r\n */\r\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\r\n  return (\r\n    <NextThemesProvider {...props}>\r\n      {children}\r\n    </NextThemesProvider>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAIA,kDAAkD;AAClD;AALA;;;AAkBO,SAAS,cAAc,EAAE,QAAQ,EAAE,GAAG,OAA2B;IACtE,qBACE,6LAAC,mJAAA,CAAA,gBAAkB;QAAE,GAAG,KAAK;kBAC1B;;;;;;AAGP;KANgB","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/echomind2/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from 'clsx';\r\nimport { twMerge } from 'tailwind-merge';\r\n\r\n// 用於組合 className 的工具函數\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAGO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/echomind2/src/components/icons/LoginIcon.tsx"],"sourcesContent":["import { SVGProps } from 'react'\r\n\r\nexport function LoginIcon(props: SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      className=\"transform transition-transform hover:scale-110\"\r\n      {...props}\r\n    >\r\n      <defs>\r\n        <filter id=\"glow\">\r\n          <feGaussianBlur stdDeviation=\"1\" result=\"blur\" />\r\n          <feComposite in=\"SourceGraphic\" in2=\"blur\" operator=\"over\" />\r\n        </filter>\r\n      </defs>\r\n      <g\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth=\"2\"\r\n        filter=\"url(#glow)\"\r\n      >\r\n        <path\r\n          strokeDasharray=\"36\"\r\n          strokeDashoffset=\"36\"\r\n          d=\"M13 4l7 0c0.55 0 1 0.45 1 1v14c0 0.55 -0.45 1 -1 1h-7\"\r\n        >\r\n          <animate\r\n            fill=\"freeze\"\r\n            attributeName=\"stroke-dashoffset\"\r\n            dur=\"0.6s\"\r\n            values=\"36;0\"\r\n          />\r\n          <animate\r\n            attributeName=\"opacity\"\r\n            dur=\"2s\"\r\n            values=\"0.4;1;0.4\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </path>\r\n        <path\r\n          strokeDasharray=\"14\"\r\n          strokeDashoffset=\"14\"\r\n          d=\"M3 12h11.5\"\r\n        >\r\n          <animate\r\n            fill=\"freeze\"\r\n            attributeName=\"stroke-dashoffset\"\r\n            begin=\"0.7s\"\r\n            dur=\"0.3s\"\r\n            values=\"14;0\"\r\n          />\r\n          <animate\r\n            attributeName=\"stroke-width\"\r\n            dur=\"1.5s\"\r\n            values=\"2;3;2\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </path>\r\n        <path\r\n          strokeDasharray=\"6\"\r\n          strokeDashoffset=\"6\"\r\n          d=\"M14.5 12l-3.5 -3.5M14.5 12l-3.5 3.5\"\r\n        >\r\n          <animate\r\n            fill=\"freeze\"\r\n            attributeName=\"stroke-dashoffset\"\r\n            begin=\"1s\"\r\n            dur=\"0.3s\"\r\n            values=\"6;0\"\r\n          />\r\n          <animate\r\n            attributeName=\"opacity\"\r\n            dur=\"1.5s\"\r\n            values=\"1;0.6;1\"\r\n            repeatCount=\"indefinite\"\r\n            begin=\"1.3s\"\r\n          />\r\n        </path>\r\n      </g>\r\n    </svg>\r\n  )\r\n} "],"names":[],"mappings":";;;;;AAEO,SAAS,UAAU,KAA8B;IACtD,qBACE,6LAAC;QACC,OAAM;QACN,OAAM;QACN,QAAO;QACP,SAAQ;QACR,WAAU;QACT,GAAG,KAAK;;0BAET,6LAAC;0BACC,cAAA,6LAAC;oBAAO,IAAG;;sCACT,6LAAC;4BAAe,cAAa;4BAAI,QAAO;;;;;;sCACxC,6LAAC;4BAAY,IAAG;4BAAgB,KAAI;4BAAO,UAAS;;;;;;;;;;;;;;;;;0BAGxD,6LAAC;gBACC,MAAK;gBACL,QAAO;gBACP,eAAc;gBACd,gBAAe;gBACf,aAAY;gBACZ,QAAO;;kCAEP,6LAAC;wBACC,iBAAgB;wBAChB,kBAAiB;wBACjB,GAAE;;0CAEF,6LAAC;gCACC,MAAK;gCACL,eAAc;gCACd,KAAI;gCACJ,QAAO;;;;;;0CAET,6LAAC;gCACC,eAAc;gCACd,KAAI;gCACJ,QAAO;gCACP,aAAY;;;;;;;;;;;;kCAGhB,6LAAC;wBACC,iBAAgB;wBAChB,kBAAiB;wBACjB,GAAE;;0CAEF,6LAAC;gCACC,MAAK;gCACL,eAAc;gCACd,OAAM;gCACN,KAAI;gCACJ,QAAO;;;;;;0CAET,6LAAC;gCACC,eAAc;gCACd,KAAI;gCACJ,QAAO;gCACP,aAAY;;;;;;;;;;;;kCAGhB,6LAAC;wBACC,iBAAgB;wBAChB,kBAAiB;wBACjB,GAAE;;0CAEF,6LAAC;gCACC,MAAK;gCACL,eAAc;gCACd,OAAM;gCACN,KAAI;gCACJ,QAAO;;;;;;0CAET,6LAAC;gCACC,eAAc;gCACd,KAAI;gCACJ,QAAO;gCACP,aAAY;gCACZ,OAAM;;;;;;;;;;;;;;;;;;;;;;;;AAMlB;KApFgB","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/echomind2/src/components/icons/SidebarToggleIcon.tsx"],"sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport { useTheme } from 'next-themes';\n\n// 定義 SidebarToggleIcon 組件的 props 介面\ninterface SidebarToggleIconProps {\n  isOpen?: boolean;  // 控制側邊欄是否開啟\n  className?: string;  // 自定義 CSS 類名\n}\n\n// 導出 SidebarToggleIcon 組件\nexport const SidebarToggleIcon: FC<SidebarToggleIconProps> = ({ isOpen = false, className }) => {\n  // 使用 next-themes 提供的 hook 來獲取主題相關資訊\n  const { theme, systemTheme } = useTheme();\n  // 用於追蹤組件是否已掛載的狀態\n  const [mounted, setMounted] = useState(false);\n  \n  // 組件掛載後將 mounted 設為 true\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  // 在客戶端渲染之前返回一個基本的 SVG\n  // 這樣可以避免 hydration 不匹配的問題\n  if (!mounted) {\n    return (\n      <svg \n        xmlns=\"http://www.w3.org/2000/svg\" \n        viewBox=\"0 0 24 24\"\n        className={`w-6 h-6 ${className}`}\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        {/* 根據 isOpen 狀態渲染不同的圖標路徑 */}\n        {isOpen ? (\n          <>\n            {/* 開啟狀態的圖標路徑 */}\n            <path d=\"M22 12c0-3.75 0-5.625-.955-6.939a5 5 0 0 0-1.106-1.106C18.625 3 16.749 3 13 3h-2c-3.75 0-5.625 0-6.939.955A5 5 0 0 0 2.955 5.06C2 6.375 2 8.251 2 12s0 5.625.955 6.939a5 5 0 0 0 1.106 1.106C5.375 21 7.251 21 11 21h2c3.75 0 5.625 0 6.939-.955a5 5 0 0 0 1.106-1.106C22 17.625 22 15.749 22 12m-7.5-8.5v17M19 7h-1.5m1.5 4h-1.5\" />\n            <path d=\"m8 10l1.227 1.057c.515.445.773.667.773.943s-.258.498-.773.943L8 14\" />\n          </>\n        ) : (\n          <>\n            {/* 關閉狀態的圖標路徑 */}\n            <path d=\"M2 12c0-3.75 0-5.625.955-6.939A5 5 0 0 1 4.06 3.955C5.375 3 7.251 3 11 3h2c3.75 0 5.625 0 6.939.955a5 5 0 0 1 1.106 1.106C22 6.375 22 8.251 22 12s0 5.625-.955 6.939a5 5 0 0 1-1.106 1.106C18.625 21 16.749 21 13 21h-2c-3.75 0-5.625 0-6.939-.955a5 5 0 0 1-1.106-1.106C2 17.625 2 15.749 2 12m7.5-8.5v17M5 7h1.5M5 11h1.5\" />\n            <path d=\"m17 10l-1.226 1.057c-.516.445-.774.667-.774.943s.258.498.774.943L17 14\" />\n          </>\n        )}\n      </svg>\n    );\n  }\n\n  // 確定當前主題色\n  const currentTheme = theme === 'system' ? systemTheme : theme;\n  // 根據主題設置描邊顏色\n  const strokeColor = currentTheme === 'dark' ? 'white' : 'black';\n\n  // 返回最終的 SVG 圖標\n  return (\n    <svg \n      xmlns=\"http://www.w3.org/2000/svg\" \n      viewBox=\"0 0 24 24\"\n      className={`w-6 h-6 ${className}`}\n      fill=\"none\"\n      stroke={strokeColor}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      {/* 根據 isOpen 狀態渲染不同的圖標路徑 */}\n      {isOpen ? (\n        <>\n          {/* 開啟狀態的圖標路徑 */}\n          <path d=\"M22 12c0-3.75 0-5.625-.955-6.939a5 5 0 0 0-1.106-1.106C18.625 3 16.749 3 13 3h-2c-3.75 0-5.625 0-6.939.955A5 5 0 0 0 2.955 5.06C2 6.375 2 8.251 2 12s0 5.625.955 6.939a5 5 0 0 0 1.106 1.106C5.375 21 7.251 21 11 21h2c3.75 0 5.625 0 6.939-.955a5 5 0 0 0 1.106-1.106C22 17.625 22 15.749 22 12m-7.5-8.5v17M19 7h-1.5m1.5 4h-1.5\" />\n          <path d=\"m8 10l1.227 1.057c.515.445.773.667.773.943s-.258.498-.773.943L8 14\" />\n        </>\n      ) : (\n        <>\n          {/* 關閉狀態的圖標路徑 */}\n          <path d=\"M2 12c0-3.75 0-5.625.955-6.939A5 5 0 0 1 4.06 3.955C5.375 3 7.251 3 11 3h2c3.75 0 5.625 0 6.939.955a5 5 0 0 1 1.106 1.106C22 6.375 22 8.251 22 12s0 5.625-.955 6.939a5 5 0 0 1-1.106 1.106C18.625 21 16.749 21 13 21h-2c-3.75 0-5.625 0-6.939-.955a5 5 0 0 1-1.106-1.106C2 17.625 2 15.749 2 12m7.5-8.5v17M5 7h1.5M5 11h1.5\" />\n          <path d=\"m17 10l-1.226 1.057c-.516.445-.774.667-.774.943s.258.498.774.943L17 14\" />\n        </>\n      )}\n    </svg>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;;AASO,MAAM,oBAAgD,CAAC,EAAE,SAAS,KAAK,EAAE,SAAS,EAAE;;IACzF,oCAAoC;IACpC,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IACtC,iBAAiB;IACjB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,yBAAyB;IACzB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACR,WAAW;QACb;sCAAG,EAAE;IAEL,sBAAsB;IACtB,0BAA0B;IAC1B,IAAI,CAAC,SAAS;QACZ,qBACE,6LAAC;YACC,OAAM;YACN,SAAQ;YACR,WAAW,CAAC,QAAQ,EAAE,WAAW;YACjC,MAAK;YACL,QAAO;YACP,aAAY;YACZ,eAAc;YACd,gBAAe;sBAGd,uBACC;;kCAEE,6LAAC;wBAAK,GAAE;;;;;;kCACR,6LAAC;wBAAK,GAAE;;;;;;;6CAGV;;kCAEE,6LAAC;wBAAK,GAAE;;;;;;kCACR,6LAAC;wBAAK,GAAE;;;;;;;;;;;;;IAKlB;IAEA,UAAU;IACV,MAAM,eAAe,UAAU,WAAW,cAAc;IACxD,aAAa;IACb,MAAM,cAAc,iBAAiB,SAAS,UAAU;IAExD,eAAe;IACf,qBACE,6LAAC;QACC,OAAM;QACN,SAAQ;QACR,WAAW,CAAC,QAAQ,EAAE,WAAW;QACjC,MAAK;QACL,QAAQ;QACR,aAAY;QACZ,eAAc;QACd,gBAAe;kBAGd,uBACC;;8BAEE,6LAAC;oBAAK,GAAE;;;;;;8BACR,6LAAC;oBAAK,GAAE;;;;;;;yCAGV;;8BAEE,6LAAC;oBAAK,GAAE;;;;;;8BACR,6LAAC;oBAAK,GAAE;;;;;;;;;;;;;AAKlB;GA5Ea;;QAEoB,mJAAA,CAAA,WAAQ;;;KAF5B","debugId":null}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/echomind2/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\r\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\r\n};\r\n\r\n// 初始化 Firebase\r\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApps()[0];\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\n\r\nexport { app, auth, db }; "],"names":[],"mappings":";;;;;AAKU;AALV;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,eAAe;AACf,MAAM,MAAM,CAAC,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;AAC5E,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/echomind2/src/hooks/useAuthState.ts"],"sourcesContent":["// 引入必要的 React Hooks 和 Firebase 認證相關功能\r\nimport { useState, useEffect } from 'react';\r\nimport { User, onAuthStateChanged, AuthError } from 'firebase/auth';\r\nimport { auth } from '@/lib/firebase';\r\n\r\n// 定義認證狀態的介面\r\ninterface AuthState {\r\n  user: User | null;     // 當前登入的用戶，未登入時為 null\r\n  loading: boolean;      // 是否正在載入認證狀態\r\n  error: AuthError | null;   // 認證過程中的錯誤，無錯誤時為 null\r\n}\r\n\r\n// 自定義 Hook 用於監聽和管理用戶的認證狀態\r\nexport const useAuthState = (): AuthState => {\r\n  // 設置狀態管理\r\n  const [user, setUser] = useState<User | null>(null);        // 用戶狀態\r\n  const [loading, setLoading] = useState(true);               // 載入狀態\r\n  const [error, setError] = useState<AuthError | null>(null);     // 錯誤狀態\r\n\r\n  useEffect(() => {\r\n    // 設置 Firebase 認證狀態監聽器\r\n    const unsubscribe = onAuthStateChanged(\r\n      auth,\r\n      async (user) => {\r\n        if (user) {\r\n          try {\r\n            // 如果有用戶登入，重新載入用戶資料以確保資料最新\r\n            await user.reload();\r\n            setUser(user);\r\n          } catch (error) {\r\n            // 處理重新載入用戶資料時的錯誤\r\n            console.error('重新載入用戶資料失敗:', error);\r\n            setError(error as AuthError);\r\n          }\r\n        } else {\r\n          // 如果沒有用戶登入，將用戶狀態設為 null\r\n          setUser(null);\r\n        }\r\n        // 完成載入，設置 loading 為 false\r\n        setLoading(false);\r\n      },\r\n      (error) => {\r\n        // 處理監聽器本身的錯誤\r\n        console.error('認證狀態監聽錯誤:', error);\r\n        setError(error as AuthError);\r\n        setLoading(false);\r\n      }\r\n    );\r\n\r\n    // 清理函數：組件卸載時取消監聽\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // 返回當前的認證狀態\r\n  return { user, loading, error };\r\n}; "],"names":[],"mappings":"AAAA,sCAAsC;;;;AACtC;AACA;AAAA;AACA;;;;;AAUO,MAAM,eAAe;;IAC1B,SAAS;IACT,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,OAAc,OAAO;IACnE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,OAAqB,OAAO;IACnE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB,OAAW,OAAO;IAEvE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,sBAAsB;YACtB,MAAM,cAAc,CAAA,GAAA,wNAAA,CAAA,qBAAkB,AAAD,EACnC,yHAAA,CAAA,OAAI;sDACJ,OAAO;oBACL,IAAI,MAAM;wBACR,IAAI;4BACF,0BAA0B;4BAC1B,MAAM,KAAK,MAAM;4BACjB,QAAQ;wBACV,EAAE,OAAO,OAAO;4BACd,iBAAiB;4BACjB,QAAQ,KAAK,CAAC,eAAe;4BAC7B,SAAS;wBACX;oBACF,OAAO;wBACL,wBAAwB;wBACxB,QAAQ;oBACV;oBACA,0BAA0B;oBAC1B,WAAW;gBACb;;sDACA,CAAC;oBACC,aAAa;oBACb,QAAQ,KAAK,CAAC,aAAa;oBAC3B,SAAS;oBACT,WAAW;gBACb;;YAGF,iBAAiB;YACjB;0CAAO,IAAM;;QACf;iCAAG,EAAE;IAEL,YAAY;IACZ,OAAO;QAAE;QAAM;QAAS;IAAM;AAChC;GA1Ca","debugId":null}},
    {"offset": {"line": 487, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/echomind2/src/hooks/useAuthActions.ts"],"sourcesContent":["// 引入 Firebase 認證相關功能\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  signOut,\r\n  updateProfile,\r\n  User,\r\n  setPersistence,\r\n  browserLocalPersistence,\r\n  browserSessionPersistence,\r\n  AuthError,\r\n} from 'firebase/auth';\r\nimport { auth } from '@/lib/firebase';\r\nimport { toast } from 'sonner';\r\n\r\n// 註冊資料介面\r\ninterface RegisterData {\r\n  email: string;\r\n  password: string;\r\n  name: string;\r\n}\r\n\r\n// 登入資料介面\r\ninterface LoginData {\r\n  email: string;\r\n  password: string;\r\n  rememberMe?: boolean;\r\n}\r\n\r\n// 認證相關操作的 Hook\r\nexport const useAuthActions = () => {\r\n  // 設定認證狀態的持久化類型\r\n  const setPersistenceType = async (rememberMe: boolean): Promise<void> => {\r\n    try {\r\n      await setPersistence(auth, \r\n        rememberMe ? browserLocalPersistence : browserSessionPersistence\r\n      );\r\n    } catch (error) {\r\n      console.error('設定持久化失敗:', error);\r\n      throw error as AuthError;\r\n    }\r\n  };\r\n\r\n  // 使用電子郵件註冊\r\n  const registerWithEmail = async ({ email, password, name }: RegisterData): Promise<User> => {\r\n    try {\r\n      // 設定持久化並創建用戶\r\n      await setPersistenceType(true);\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      \r\n      // 更新用戶資料\r\n      await updateProfile(userCredential.user, {\r\n        displayName: name\r\n      });\r\n      \r\n      // 顯示成功訊息\r\n      toast.success('註冊成功！', {\r\n        description: '歡迎加入 EchoMind',\r\n        duration: 3000,\r\n      });\r\n\r\n      return userCredential.user;\r\n    } catch (error) {\r\n      handleAuthError(error as AuthError);\r\n      throw error as AuthError;\r\n    }\r\n  };\r\n\r\n  // 使用電子郵件登入\r\n  const loginWithEmail = async ({ email, password, rememberMe = false }: LoginData): Promise<User> => {\r\n    try {\r\n      // 設定持久化並登入\r\n      await setPersistenceType(rememberMe);\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      \r\n      // 顯示成功訊息\r\n      toast.success('登入成功！', {\r\n        description: '歡迎回來',\r\n        duration: 3000,\r\n      });\r\n\r\n      return userCredential.user;\r\n    } catch (error) {\r\n      handleAuthError(error as AuthError);\r\n      throw error as AuthError;\r\n    }\r\n  };\r\n\r\n  // 使用 Google 登入\r\n  const loginWithGoogle = async (rememberMe: boolean = false): Promise<User> => {\r\n    try {\r\n      // 設定持久化\r\n      await setPersistenceType(rememberMe);\r\n      const provider = new GoogleAuthProvider();\r\n      // 設定 Google 登入選項\r\n      provider.setCustomParameters({\r\n        prompt: 'select_account'\r\n      });\r\n      \r\n      // 執行 Google 登入\r\n      const userCredential = await signInWithPopup(auth, provider);\r\n      \r\n      // 顯示成功訊息\r\n      toast.success('Google 登入成功！', {\r\n        description: '歡迎回來',\r\n        duration: 3000,\r\n      });\r\n\r\n      return userCredential.user;\r\n    } catch (error) {\r\n      handleAuthError(error as AuthError);\r\n      throw error as AuthError;\r\n    }\r\n  };\r\n\r\n  // 登出功能\r\n  const logout = async (): Promise<void> => {\r\n    try {\r\n      await signOut(auth);\r\n      \r\n      // 顯示成功訊息\r\n      toast.success('登出成功！', {\r\n        description: '期待您的再次使用',\r\n        duration: 3000,\r\n      });\r\n    } catch (error) {\r\n      handleAuthError(error as AuthError);\r\n      throw error as AuthError;\r\n    }\r\n  };\r\n\r\n  // 返回所有認證操作函數\r\n  return {\r\n    registerWithEmail,\r\n    loginWithEmail,\r\n    loginWithGoogle,\r\n    logout,\r\n  };\r\n};\r\n\r\n// 處理認證錯誤\r\nconst handleAuthError = (error: AuthError) => {\r\n  const errorMessage = getErrorMessage(error.code);\r\n  console.error('認證錯誤:', error);\r\n  \r\n  // 顯示錯誤訊息\r\n  toast.error('操作失敗', {\r\n    description: errorMessage,\r\n    duration: 3000,\r\n  });\r\n};\r\n\r\n// 取得錯誤訊息對應的中文說明\r\nconst getErrorMessage = (errorCode: string): string => {\r\n  const errorMessages: { [key: string]: string } = {\r\n    'auth/email-already-in-use': '此電子郵件已被註冊',\r\n    'auth/invalid-email': '無效的電子郵件格式',\r\n    'auth/operation-not-allowed': '此登入方式未啟用',\r\n    'auth/weak-password': '密碼強度不足',\r\n    'auth/user-disabled': '此帳號已被停用',\r\n    'auth/user-not-found': '找不到此用戶',\r\n    'auth/wrong-password': '密碼錯誤',\r\n    'auth/popup-closed-by-user': '登入視窗被關閉',\r\n    'auth/popup-blocked': '登入視窗被阻擋',\r\n    'auth/cancelled-popup-request': '登入請求已取消',\r\n    'auth/network-request-failed': '網路連線失敗',\r\n    'auth/too-many-requests': '登入嘗試次數過多，請稍後再試',\r\n    'auth/requires-recent-login': '請重新登入以繼續操作',\r\n    'auth/account-exists-with-different-credential': '此電子郵件已使用其他登入方式註冊',\r\n  };\r\n\r\n  return errorMessages[errorCode] || '發生未知錯誤，請稍後再試';\r\n}; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 638, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/echomind2/src/contexts/AuthContext.tsx"],"sourcesContent":["'use client'; // 標記此組件為客戶端組件\n\n// 導入必要的依賴\nimport { createContext, useContext, ReactNode } from 'react';\nimport { User, AuthError } from 'firebase/auth';\nimport { useAuthState } from '@/hooks/useAuthState';\nimport { useAuthActions } from '@/hooks/useAuthActions';\n\n/**\n * 認證上下文的類型定義\n * @interface AuthContextType\n * @property {User | null} user - 當前登入的用戶對象或 null\n * @property {boolean} loading - 認證狀態是否正在加載中\n * @property {AuthError | null} error - 認證過程中可能遇到的錯誤或 null\n * @property {function} registerWithEmail - 註冊用戶的函數\n * @property {function} loginWithEmail - 用電子郵件登入的函數\n * @property {function} loginWithGoogle - 用 Google 登入的函數\n * @property {function} logout - 登出用戶的函數\n */\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  error: AuthError | null;\n  registerWithEmail: (data: { email: string; password: string; name: string }) => Promise<User>;\n  loginWithEmail: (data: { email: string; password: string; rememberMe?: boolean }) => Promise<User>;\n  loginWithGoogle: (rememberMe?: boolean) => Promise<User>;\n  logout: () => Promise<void>;\n}\n\n// 創建認證上下文，設置默認值\nconst AuthContext = createContext<AuthContextType | null>(null);\n\n/**\n * 自定義 Hook，用於獲取認證上下文\n * @throws {Error} 如果在 AuthProvider 外部使用則拋出錯誤\n * @returns {AuthContextType} 認證上下文對象\n */\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth 必須在 AuthProvider 內使用');\n  }\n  return context;\n};\n\n/**\n * AuthProvider 組件的 Props 類型定義\n * @interface AuthProviderProps\n * @property {ReactNode} children - 子組件\n */\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\n/**\n * 認證提供者組件\n * 管理用戶認證狀態並提供給子組件\n * @param {AuthProviderProps} props - 組件屬性\n * @returns {JSX.Element} 認證提供者組件\n */\nexport const AuthProvider = ({ children }: AuthProviderProps) => {\n  const { user, loading, error } = useAuthState();\n  const { registerWithEmail, loginWithEmail, loginWithGoogle, logout } = useAuthActions();\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-gray-900 dark:border-white\"></div>\n      </div>\n    );\n  }\n\n  // 準備提供給上下文的值\n  const value: AuthContextType = {\n    user,\n    loading,\n    error: error as AuthError,\n    registerWithEmail,\n    loginWithEmail,\n    loginWithGoogle,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"names":[],"mappings":";;;;;AAEA,UAAU;AACV;AAEA;AACA;;;AANA,cAAc,cAAc;;;;AA6B5B,gBAAgB;AAChB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA0B;AAOnD,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANa;AAuBN,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAqB;;IAC1D,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,eAAY,AAAD;IAC5C,MAAM,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD;IAEpF,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,aAAa;IACb,MAAM,QAAyB;QAC7B;QACA;QACA,OAAO;QACP;QACA;QACA;QACA;IACF;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP;IA5Ba;;QACsB,+HAAA,CAAA,eAAY;QAC0B,iIAAA,CAAA,iBAAc;;;KAF1E","debugId":null}},
    {"offset": {"line": 721, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/echomind2/src/components/layout/Header.tsx"],"sourcesContent":["'use client';\n\nimport { FC, useState } from 'react';\nimport { Moon, Sun, LogOut, User as UserIcon, Settings } from 'lucide-react';\nimport { useTheme } from 'next-themes';\nimport { cn } from '@/lib/utils';\nimport Link from 'next/link';\nimport { LoginIcon } from '../icons/LoginIcon';\nimport { SidebarToggleIcon } from '../icons/SidebarToggleIcon';\nimport { useRouter } from 'next/navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport Image from 'next/image';\n\n// Logo 組件\nconst Logo: FC<{ className?: string }> = ({ className }) => (\n  <svg \n    xmlns=\"http://www.w3.org/2000/svg\" \n    width=\"24\" \n    height=\"24\" \n    viewBox=\"0 0 48 48\"\n    className={className}\n  >\n    <g fill=\"none\">\n      <path \n        stroke=\"currentColor\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\" \n        strokeWidth=\"4\" \n        d=\"M12 8c-3.052 4.517-5.987 5.81-8 5c.543 1.833 4.443 4.375 6.927 5.838c1.07.63 1.383 2.065.638 3.059C10.202 23.717 8.315 26.289 8 27C.954 39.79 16.482 44.648 24 44c22.144-1.908 21.355-19.197 18-26c-8.052 13.994-20.481 5.915-20 3s3.792-2.335 5-7C29.013 4.768 16.374.399 12 8\"\n      />\n      <path \n        stroke=\"currentColor\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\" \n        strokeWidth=\"4\" \n        d=\"M19 31c2.5 3.5 10 7 16 2\"\n      />\n      <circle cx=\"17\" cy=\"12\" r=\"2\" fill=\"currentColor\"/>\n    </g>\n  </svg>\n);\n\ninterface HeaderProps {\n  isSidebarOpen: boolean;\n  onToggleSidebar: () => void;\n}\n\nconst Header: FC<HeaderProps> = ({ isSidebarOpen, onToggleSidebar }) => {\n  const { theme, setTheme } = useTheme();\n  const [isActive, setIsActive] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const router = useRouter();\n  const { user, loading, logout } = useAuth();\n\n  const handleClick = () => {\n    onToggleSidebar();\n    setIsActive(!isActive);\n  };\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      router.push('/login');\n    } catch (error) {\n      console.error('登出失敗:', error);\n    }\n  };\n\n  // 如果正在載入，顯示載入狀態\n  if (loading) {\n    return (\n      <header className=\"fixed top-0 left-0 right-0 z-50 h-20 border-b border-gray-200 bg-white/80 backdrop-blur-sm dark:border-gray-700 dark:bg-gray-900/80\">\n        <div className=\"flex h-full items-center justify-between px-4 lg:px-6\">\n          <div className=\"flex items-center gap-4\">\n            <button\n              onClick={handleClick}\n              className={cn(\n                \"flex h-10 w-10 items-center justify-center rounded-lg text-gray-600 transition-colors\",\n                isActive ? \"bg-gray-100 dark:bg-gray-800\" : \"hover:bg-gray-100 dark:hover:bg-gray-800\"\n              )}\n              aria-label=\"切換側邊欄\"\n            >\n              <SidebarToggleIcon isOpen={isSidebarOpen} className=\"h-5 w-5\" />\n            </button>\n            <Link \n              href=\"/\" \n              className=\"flex items-center gap-2 text-xl lg:text-2xl font-bold text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 transition-colors\"\n            >\n              <Logo className=\"h-8 w-8 lg:h-9 lg:w-9\" />\n              <span>EchoMind</span>\n            </Link>\n          </div>\n          <div className=\"flex items-center gap-3\">\n            <div className=\"animate-pulse h-10 w-10 rounded-full bg-gray-200 dark:bg-gray-700\"></div>\n          </div>\n        </div>\n      </header>\n    );\n  }\n\n  return (\n    <header className=\"fixed top-0 left-0 right-0 z-50 h-20 border-b border-gray-200 bg-white/80 backdrop-blur-sm dark:border-gray-700 dark:bg-gray-900/80\">\n      <div className=\"flex h-full items-center justify-between px-4 lg:px-6\">\n        {/* 左側區域 */}\n        <div className=\"flex items-center gap-4\">\n          <button\n            onClick={handleClick}\n            className={cn(\n              \"flex h-10 w-10 items-center justify-center rounded-lg text-gray-600 transition-colors\",\n              isActive ? \"bg-gray-100 dark:bg-gray-800\" : \"hover:bg-gray-100 dark:hover:bg-gray-800\"\n            )}\n            aria-label=\"切換側邊欄\"\n          >\n            <SidebarToggleIcon isOpen={isSidebarOpen} className=\"h-5 w-5\" />\n          </button>\n          <Link \n            href=\"/\" \n            className=\"flex items-center gap-2 text-xl lg:text-2xl font-bold text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 transition-colors\"\n          >\n            <Logo className=\"h-8 w-8 lg:h-9 lg:w-9\" />\n            <span>EchoMind</span>\n          </Link>\n        </div>\n\n        {/* 右側區域 */}\n        <div className=\"flex items-center gap-3\">\n          {/* 主題切換按鈕 */}\n          <button\n            onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}\n            className=\"flex h-10 w-10 items-center justify-center rounded-lg text-gray-600 transition-colors hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-800\"\n          >\n            <Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n            <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n          </button>\n\n          {/* 用戶頭像或登入按鈕 */}\n          {user ? (\n            <div className=\"relative\">\n              <button\n                onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n                className=\"flex h-10 w-10 items-center justify-center overflow-hidden rounded-full border-2 border-gray-200 hover:border-blue-500 dark:border-gray-700 dark:hover:border-blue-400\"\n              >\n                {user.photoURL ? (\n                  <Image\n                    src={user.photoURL}\n                    alt={user.displayName || '用戶頭像'}\n                    width={32}\n                    height={32}\n                    className=\"h-full w-full object-cover\"\n                  />\n                ) : (\n                  <div className=\"flex h-full w-full items-center justify-center bg-gray-100 text-gray-600 dark:bg-gray-800 dark:text-gray-300\">\n                    <svg \n                      xmlns=\"http://www.w3.org/2000/svg\" \n                      width=\"24\" \n                      height=\"24\" \n                      viewBox=\"0 0 24 24\"\n                      className=\"h-6 w-6\"\n                    >\n                      <path \n                        fill=\"currentColor\" \n                        d=\"M13 3c3.88 0 7 3.14 7 7c0 2.8-1.63 5.19-4 6.31V21H9v-3H8c-1.11 0-2-.89-2-2v-3H4.5c-.42 0-.66-.5-.42-.81L6 9.66A7.003 7.003 0 0 1 13 3m0-2C8.41 1 4.61 4.42 4.06 8.9L2.5 11h-.03l-.02.03c-.55.76-.62 1.76-.19 2.59c.36.69 1 1.17 1.74 1.32V16c0 1.85 1.28 3.42 3 3.87V23h11v-5.5c2.5-1.67 4-4.44 4-7.5c0-4.97-4.04-9-9-9m4.33 8.3l-1.96.51l1.44 1.46c.35.34.35.92 0 1.27s-.93.35-1.27 0l-1.45-1.44l-.52 1.96c-.12.49-.61.76-1.07.64a.91.91 0 0 1-.66-1.11l.53-1.96l-1.96.53a.91.91 0 0 1-1.11-.66c-.12-.45.16-.95.64-1.07l1.96-.52l-1.44-1.45a.9.9 0 0 1 1.27-1.27l1.46 1.44l.51-1.96c.12-.49.62-.77 1.09-.64c.49.13.77.62.64 1.1L14.9 8.1l1.97-.53c.48-.13.97.15 1.1.64c.13.47-.15.97-.64 1.09\"\n                      />\n                    </svg>\n                  </div>\n                )}\n              </button>\n\n              {/* 下拉選單 */}\n              {isDropdownOpen && (\n                <div className=\"absolute right-0 mt-2 w-48 rounded-lg border border-gray-200 bg-white py-2 shadow-lg dark:border-gray-700 dark:bg-gray-800\">\n                  <div className=\"px-4 py-2\">\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {user.displayName || '用戶'}\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">\n                      {user.email}\n                    </p>\n                  </div>\n                  <div className=\"h-px bg-gray-200 dark:bg-gray-700\" />\n                  <button\n                    onClick={() => {\n                      setIsDropdownOpen(false);\n                      router.push('/profile');\n                    }}\n                    className=\"flex w-full items-center gap-2 px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700\"\n                  >\n                    <UserIcon className=\"h-4 w-4\" />\n                    個人資料\n                  </button>\n                  <button\n                    onClick={() => {\n                      setIsDropdownOpen(false);\n                      router.push('/settings');\n                    }}\n                    className=\"flex w-full items-center gap-2 px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700\"\n                  >\n                    <Settings className=\"h-4 w-4\" />\n                    設定\n                  </button>\n                  <div className=\"h-px bg-gray-200 dark:bg-gray-700\" />\n                  <button\n                    onClick={() => {\n                      setIsDropdownOpen(false);\n                      handleLogout();\n                    }}\n                    className=\"flex w-full items-center gap-2 px-4 py-2 text-sm text-red-600 hover:bg-gray-100 dark:text-red-400 dark:hover:bg-gray-700\"\n                  >\n                    <LogOut className=\"h-4 w-4\" />\n                    登出\n                  </button>\n                </div>\n              )}\n            </div>\n          ) : (\n            <Link \n              href=\"/login\" \n              className={cn(\n                \"flex items-center gap-2\",\n                \"px-4 py-2 lg:px-6 lg:py-2.5\",\n                \"bg-gradient-to-r from-amber-500 via-orange-500 to-rose-500\",\n                \"hover:from-amber-600 hover:via-orange-600 hover:to-rose-600\",\n                \"dark:from-amber-400 dark:via-orange-400 dark:to-rose-400\",\n                \"dark:hover:from-amber-500 dark:hover:via-orange-500 dark:hover:to-rose-500\",\n                \"text-white rounded-lg\",\n                \"transition-all duration-300 ease-in-out\",\n                \"transform hover:scale-105 active:scale-95\",\n                \"shadow-md hover:shadow-lg\",\n                \"hover:shadow-orange-500/20 dark:hover:shadow-orange-400/20\"\n              )}\n            >\n              <LoginIcon className=\"h-5 w-5 lg:h-6 lg:w-6\" />\n              <span className=\"hidden sm:inline font-medium\">登入</span>\n            </Link>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAXA;;;;;;;;;;;AAaA,UAAU;AACV,MAAM,OAAmC,CAAC,EAAE,SAAS,EAAE,iBACrD,6LAAC;QACC,OAAM;QACN,OAAM;QACN,QAAO;QACP,SAAQ;QACR,WAAW;kBAEX,cAAA,6LAAC;YAAE,MAAK;;8BACN,6LAAC;oBACC,QAAO;oBACP,eAAc;oBACd,gBAAe;oBACf,aAAY;oBACZ,GAAE;;;;;;8BAEJ,6LAAC;oBACC,QAAO;oBACP,eAAc;oBACd,gBAAe;oBACf,aAAY;oBACZ,GAAE;;;;;;8BAEJ,6LAAC;oBAAO,IAAG;oBAAK,IAAG;oBAAK,GAAE;oBAAI,MAAK;;;;;;;;;;;;;;;;;KAvBnC;AAiCN,MAAM,SAA0B,CAAC,EAAE,aAAa,EAAE,eAAe,EAAE;;IACjE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAExC,MAAM,cAAc;QAClB;QACA,YAAY,CAAC;IACf;IAEA,MAAM,eAAe;QACnB,IAAI;YACF,MAAM;YACN,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,SAAS;QACzB;IACF;IAEA,gBAAgB;IAChB,IAAI,SAAS;QACX,qBACE,6LAAC;YAAO,WAAU;sBAChB,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,SAAS;gCACT,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yFACA,WAAW,iCAAiC;gCAE9C,cAAW;0CAEX,cAAA,6LAAC,mJAAA,CAAA,oBAAiB;oCAAC,QAAQ;oCAAe,WAAU;;;;;;;;;;;0CAEtD,6LAAC,+JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAU;;kDAEV,6LAAC;wCAAK,WAAU;;;;;;kDAChB,6LAAC;kDAAK;;;;;;;;;;;;;;;;;;kCAGV,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;IAKzB;IAEA,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS;4BACT,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yFACA,WAAW,iCAAiC;4BAE9C,cAAW;sCAEX,cAAA,6LAAC,mJAAA,CAAA,oBAAiB;gCAAC,QAAQ;gCAAe,WAAU;;;;;;;;;;;sCAEtD,6LAAC,+JAAA,CAAA,UAAI;4BACH,MAAK;4BACL,WAAU;;8CAEV,6LAAC;oCAAK,WAAU;;;;;;8CAChB,6LAAC;8CAAK;;;;;;;;;;;;;;;;;;8BAKV,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BACC,SAAS,IAAM,SAAS,UAAU,SAAS,UAAU;4BACrD,WAAU;;8CAEV,6LAAC,mMAAA,CAAA,MAAG;oCAAC,WAAU;;;;;;8CACf,6LAAC,qMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;;;;;;;wBAIjB,qBACC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACC,SAAS,IAAM,kBAAkB,CAAC;oCAClC,WAAU;8CAET,KAAK,QAAQ,iBACZ,6LAAC,gIAAA,CAAA,UAAK;wCACJ,KAAK,KAAK,QAAQ;wCAClB,KAAK,KAAK,WAAW,IAAI;wCACzB,OAAO;wCACP,QAAQ;wCACR,WAAU;;;;;6DAGZ,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CACC,OAAM;4CACN,OAAM;4CACN,QAAO;4CACP,SAAQ;4CACR,WAAU;sDAEV,cAAA,6LAAC;gDACC,MAAK;gDACL,GAAE;;;;;;;;;;;;;;;;;;;;;gCAQX,gCACC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAE,WAAU;8DACV,KAAK,WAAW,IAAI;;;;;;8DAEvB,6LAAC;oDAAE,WAAU;8DACV,KAAK,KAAK;;;;;;;;;;;;sDAGf,6LAAC;4CAAI,WAAU;;;;;;sDACf,6LAAC;4CACC,SAAS;gDACP,kBAAkB;gDAClB,OAAO,IAAI,CAAC;4CACd;4CACA,WAAU;;8DAEV,6LAAC,qMAAA,CAAA,OAAQ;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAGlC,6LAAC;4CACC,SAAS;gDACP,kBAAkB;gDAClB,OAAO,IAAI,CAAC;4CACd;4CACA,WAAU;;8DAEV,6LAAC,6MAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAGlC,6LAAC;4CAAI,WAAU;;;;;;sDACf,6LAAC;4CACC,SAAS;gDACP,kBAAkB;gDAClB;4CACF;4CACA,WAAU;;8DAEV,6LAAC,6MAAA,CAAA,SAAM;oDAAC,WAAU;;;;;;gDAAY;;;;;;;;;;;;;;;;;;iDAOtC,6LAAC,+JAAA,CAAA,UAAI;4BACH,MAAK;4BACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2BACA,+BACA,8DACA,+DACA,4DACA,8EACA,yBACA,2CACA,6CACA,6BACA;;8CAGF,6LAAC,2IAAA,CAAA,YAAS;oCAAC,WAAU;;;;;;8CACrB,6LAAC;oCAAK,WAAU;8CAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO7D;GAhMM;;QACwB,mJAAA,CAAA,WAAQ;QAGrB,qIAAA,CAAA,YAAS;QACU,kIAAA,CAAA,UAAO;;;MALrC;uCAkMS","debugId":null}},
    {"offset": {"line": 1217, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/echomind2/src/components/layout/Sidebar.tsx"],"sourcesContent":["'use client';\n\nimport React, { FC } from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { cn } from '@/lib/utils';\nimport {\n  MessageSquare,\n  Settings,\n  HelpCircle,\n  X,\n  Clock,\n} from 'lucide-react';\n\n// 定義側邊欄項目的介面\ninterface SidebarItem {\n  icon: React.ComponentType<{ className?: string }> | (() => React.ReactNode);\n  label: string;\n  href: string;\n}\n\n// 定義側邊欄的 Props 介面\ninterface SidebarProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\n// 模擬的聊天歷史記錄\nconst chatHistory = [\n  { id: 1, title: \"關於 AI 的討論\", time: \"3 小時前\" },\n  { id: 2, title: \"如何學習程式設計\", time: \"昨天\" },\n  { id: 3, title: \"探討未來科技趨勢\", time: \"2 天前\" },\n];\n\n// 側邊欄導航項目\nconst sidebarItems: SidebarItem[] = [\n  {\n    icon: () => (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        className=\"h-6 w-6\"\n      >\n        <path\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.5\"\n          d=\"M9 12h3m3 0h-3m0 0V9m0 3v3m0 7c5.523 0 10-4.477 10-10S17.523 2 12 2S2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.96 9.96 0 0 0 12 22\"\n        />\n      </svg>\n    ),\n    label: '開啟新對話',\n    href: '/',\n  },\n  {\n    icon: () => (\n      <svg \n        xmlns=\"http://www.w3.org/2000/svg\" \n        width=\"24\" \n        height=\"24\" \n        viewBox=\"0 0 24 24\"\n        className=\"h-6 w-6\"\n      >\n        <path \n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.5\"\n          d=\"M22 12c0-5.523-4.477-10-10-10a9.97 9.97 0 0 0-7 2.859V3.75a.75.75 0 0 0-1.5 0v3.5c0 .414.336.75.75.75h3.5a.75.75 0 0 0 0-1.5H5.519a8.5 8.5 0 1 1 2.348 12.93l-.27-.15l-3.986 1.111l1.113-3.984l-.151-.27A8.46 8.46 0 0 1 3.5 12c0-.675.079-1.332.227-1.962c.08-.301.065-.888-.536-1.02c-.613-.134-.87.355-.935.719h.001A10 10 0 0 0 2 12a9.96 9.96 0 0 0 1.115 4.592l-1.068 3.823a1.25 1.25 0 0 0 1.54 1.54l3.826-1.067A9.96 9.96 0 0 0 12 22c5.523 0 10-4.477 10-10\"\n        />\n        <path\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.5\"\n          d=\"M11.25 8a.75.75 0 0 0-.75.75v4.5c0 .414.336.75.75.75h3a.75.75 0 0 0 0-1.5H12V8.75a.75.75 0 0 0-.75-.75\"\n        />\n      </svg>\n    ),\n    label: '聊天歷史',\n    href: '/#history',\n  },\n  {\n    icon: MessageSquare,\n    label: '匿名留言板',\n    href: '/#anonymous',\n  },\n  {\n    icon: () => (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"128\" height=\"128\" viewBox=\"0 0 20 20\" className=\"h-6 w-6\">\n        <path fill=\"currentColor\" d=\"M7.5 4a5.5 5.5 0 1 0 0 11h5a5.5 5.5 0 1 0 0-11zM6 7.5a.5.5 0 0 1 1 0V9h1.5a.5.5 0 0 1 0 1H7v1.5a.5.5 0 0 1-1 0V10H4.5a.5.5 0 0 1 0-1H6zm9 .5a1 1 0 1 1-2 0a1 1 0 0 1 2 0m-3 4a1 1 0 1 1 0-2a1 1 0 0 1 0 2\"/>\n      </svg>\n    ),\n    label: '小遊戲',\n    href: '/#games',\n  },\n];\n\n// 底部導航項目\nconst bottomItems: SidebarItem[] = [\n  {\n    icon: HelpCircle,\n    label: '幫助',\n    href: '/#help',\n  },\n  {\n    icon: Settings,\n    label: '設定',\n    href: '/#settings',\n  },\n];\n\n// Sidebar 組件\nconst Sidebar: FC<SidebarProps> = ({ isOpen, onClose }) => {\n  // 使用 Next.js 的 usePathname hook 獲取當前路徑\n  const pathname = usePathname();\n\n  // 導航項目組件\n  const NavItem: FC<{ item: SidebarItem }> = ({ item }) => {\n    // 解構 item 中的 icon\n    const Icon = item.icon;\n    // 檢查當前路徑是否與項目的 href 相匹配\n    const isActive = pathname === item.href;\n\n    return (\n      <Link\n        href={item.href}\n        className={cn(\n          'flex items-center gap-3 rounded-lg px-3 py-2 transition-all',\n          // 根據活動狀態應用不同的樣式\n          isActive && 'bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-50',\n          !isActive && 'text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-50'\n        )}\n      >\n        {/* 根據 Icon 的類型進行不同的渲染 */}\n        {typeof Icon === 'function' ? \n          <Icon className=\"h-6 w-6\" /> : \n          React.createElement(Icon, { className: \"h-6 w-6\" })}\n        {/* 項目標籤，在側邊欄關閉時在大螢幕上隱藏 */}\n        <span className={cn(\n          \"font-medium transition-all duration-300\",\n          !isOpen && \"lg:hidden\"\n        )}>\n          {item.label}\n        </span>\n      </Link>\n    );\n  };\n\n  return (\n    <>\n      {/* 遮罩層 - 僅在行動裝置上顯示 */}\n      {isOpen && (\n        <div\n          className=\"fixed inset-0 bg-black/20 backdrop-blur-sm z-40 lg:hidden\"\n          onClick={onClose}\n        />\n      )}\n      \n      {/* 側邊欄 */}\n      <aside className={cn(\n        \"fixed top-20 bottom-0 left-0 z-50\",\n        \"w-64 bg-white dark:bg-gray-900\",\n        \"border-r border-gray-200 dark:border-gray-700\",\n        \"transition-all duration-300 ease-in-out\",\n        \"flex flex-col\",\n        isOpen ? \"translate-x-0\" : \"-translate-x-full lg:translate-x-0\",\n        !isOpen && \"lg:w-20\"\n      )}>\n        {/* 行動裝置關閉按鈕 */}\n        <button\n          onClick={onClose}\n          className=\"absolute right-4 top-4 p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 lg:hidden\"\n        >\n          <X className=\"h-5 w-5 text-gray-600 dark:text-gray-300\" />\n        </button>\n\n        {/* 主要導航區域 */}\n        <nav className=\"flex-1 space-y-6 p-4 overflow-y-auto\">\n          {/* 主要功能選單 */}\n          <div className=\"space-y-1\">\n            {sidebarItems.map((item) => (\n              <NavItem key={item.href} item={item} />\n            ))}\n          </div>\n          {/* 分隔線 */}\n          <div className=\"border-t border-gray-200 dark:border-gray-700 my-2\" />\n        \n\n          {/* 聊天歷史記錄 */}\n          <div className={cn(\n            \"space-y-2\",\n            !isOpen && \"lg:hidden\"\n          )}>\n            <div className=\"flex items-center justify-between px-4 py-2\">\n              <div className=\"flex items-center gap-2 text-sm font-medium text-gray-600 dark:text-gray-400\">\n                <Clock className=\"h-4 w-4\" />\n                <span>最近對話</span>\n              </div>\n            </div>\n            <div className=\"space-y-1\">\n              {chatHistory.map((chat) => (\n                <Link\n                  key={chat.id}\n                  href={`/#chat-${chat.id}`}\n                  className=\"flex flex-col px-4 py-2 text-sm rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800\"\n                >\n                  <span className=\"font-medium text-gray-700 dark:text-gray-300 truncate\">\n                    {chat.title}\n                  </span>\n                  <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                    {chat.time}\n                  </span>\n                </Link>\n              ))}\n            </div>\n          </div>\n        </nav>\n\n        {/* 底部導航區域 */}\n        <div className=\"border-t border-gray-200 dark:border-gray-700 p-4 space-y-1\">\n          {bottomItems.map((item) => (\n            <NavItem key={item.href} item={item} />\n          ))}\n        </div>\n      </aside>\n    </>\n  );\n};\n\nexport default Sidebar;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1579, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/echomind2/src/components/layout/ClientLayout.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport { cn } from '@/lib/utils';\n\n// ClientLayout 組件：處理整體佈局，包括側邊欄和主內容區\nexport default function ClientLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  // 控制側邊欄開關狀態\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n\n  // 處理視窗大小變化\n  useEffect(() => {\n    const handleResize = () => {\n      // 在大螢幕（寬度 >= 1024px）上自動開啟側邊欄\n      if (window.innerWidth >= 1024) {\n        setIsSidebarOpen(true);\n      }\n    };\n\n    // 初始檢查視窗大小\n    handleResize();\n\n    // 添加視窗大小變化的事件監聽器\n    window.addEventListener('resize', handleResize);\n\n    // 組件卸載時清理事件監聽器\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-white dark:bg-gray-900\">\n      {/* 頁面頂部的 Header 組件 */}\n      <Header \n        onToggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)} \n        isSidebarOpen={isSidebarOpen}\n      />\n      {/* 側邊欄組件 */}\n      <Sidebar \n        isOpen={isSidebarOpen} \n        onClose={() => setIsSidebarOpen(false)} \n      />\n      {/* 主內容區 */}\n      <main className={cn(\n        \"pt-20 transition-all duration-300\",\n        // 根據側邊欄狀態動態調整左側內邊距\n        isSidebarOpen ? \"lg:pl-64\" : \"lg:pl-20\"\n      )}>\n        {children}\n      </main>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAQe,SAAS,aAAa,EACnC,QAAQ,EAGT;;IACC,YAAY;IACZ,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,WAAW;IACX,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM;uDAAe;oBACnB,6BAA6B;oBAC7B,IAAI,OAAO,UAAU,IAAI,MAAM;wBAC7B,iBAAiB;oBACnB;gBACF;;YAEA,WAAW;YACX;YAEA,iBAAiB;YACjB,OAAO,gBAAgB,CAAC,UAAU;YAElC,eAAe;YACf;0CAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;;QACpD;iCAAG,EAAE;IAEL,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC,yIAAA,CAAA,UAAM;gBACL,iBAAiB,IAAM,iBAAiB,CAAC;gBACzC,eAAe;;;;;;0BAGjB,6LAAC,0IAAA,CAAA,UAAO;gBACN,QAAQ;gBACR,SAAS,IAAM,iBAAiB;;;;;;0BAGlC,6LAAC;gBAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAChB,qCACA,mBAAmB;gBACnB,gBAAgB,aAAa;0BAE5B;;;;;;;;;;;;AAIT;GAjDwB;KAAA","debugId":null}},
    {"offset": {"line": 1667, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/echomind2/src/lib/utils/auth.ts"],"sourcesContent":["// 引入 Firebase 認證相關功能\r\nimport { \r\n  onAuthStateChanged, \r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword, \r\n  GoogleAuthProvider, \r\n  signInWithPopup,\r\n  User,\r\n  UserCredential,\r\n  updateProfile,\r\n  updateEmail,\r\n  updatePassword,\r\n  AuthError\r\n} from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\n\r\n// 初始化認證狀態監聽器\r\nexport const initializeAuthListener = (callback: (user: User | null) => void) => {\r\n  return onAuthStateChanged(auth, (user) => {\r\n    callback(user);\r\n  });\r\n};\r\n\r\n// 更新用戶個人資料\r\nexport const updateUserProfile = async (\r\n  displayName?: string,\r\n  photoURL?: string\r\n): Promise<void> => {\r\n  try {\r\n    if (!auth.currentUser) {\r\n      throw new Error('沒有登入的用戶') as AuthError;\r\n    }\r\n\r\n    await updateProfile(auth.currentUser, {\r\n      displayName,\r\n      photoURL\r\n    });\r\n  } catch (error) {\r\n    console.error('更新用戶資料失敗:', error);\r\n    throw error as AuthError;\r\n  }\r\n};\r\n\r\n// 更新用戶電子郵件\r\nexport const updateUserEmail = async (newEmail: string): Promise<void> => {\r\n  try {\r\n    if (!auth.currentUser) {\r\n      throw new Error('沒有登入的用戶') as AuthError;\r\n    }\r\n\r\n    await updateEmail(auth.currentUser, newEmail);\r\n  } catch (error) {\r\n    console.error('更新電子郵件失敗:', error);\r\n    throw error as AuthError;\r\n  }\r\n};\r\n\r\n// 更新用戶密碼\r\nexport const updateUserPassword = async (newPassword: string): Promise<void> => {\r\n  try {\r\n    if (!auth.currentUser) {\r\n      throw new Error('沒有登入的用戶') as AuthError;\r\n    }\r\n\r\n    await updatePassword(auth.currentUser, newPassword);\r\n  } catch (error) {\r\n    console.error('更新密碼失敗:', error);\r\n    throw error as AuthError;\r\n  }\r\n};\r\n\r\n// 使用電子郵件註冊新用戶\r\nexport const registerWithEmail = async (\r\n  email: string,\r\n  password: string\r\n): Promise<UserCredential> => {\r\n  try {\r\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n    return userCredential;\r\n  } catch (error) {\r\n    console.error('電子郵件註冊失敗:', error);\r\n    throw error as AuthError;\r\n  }\r\n};\r\n\r\n// 使用電子郵件和密碼登入\r\nexport const loginWithEmail = async (\r\n  email: string, \r\n  password: string\r\n): Promise<UserCredential> => {\r\n  try {\r\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n    return userCredential;\r\n  } catch (error) {\r\n    console.error('電子郵件登入失敗:', error);\r\n    throw error as AuthError;\r\n  }\r\n};\r\n\r\n// 使用 Google 帳號登入\r\nexport const loginWithGoogle = async (): Promise<UserCredential> => {\r\n  try {\r\n    const provider = new GoogleAuthProvider();\r\n    const userCredential = await signInWithPopup(auth, provider);\r\n    return userCredential;\r\n  } catch (error) {\r\n    console.error('Google 登入失敗:', error);\r\n    throw error as AuthError;\r\n  }\r\n}; "],"names":[],"mappings":"AAAA,qBAAqB;;;;;;;;;;AACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;AAGO,MAAM,yBAAyB,CAAC;IACrC,OAAO,CAAA,GAAA,wNAAA,CAAA,qBAAkB,AAAD,EAAE,yHAAA,CAAA,OAAI,EAAE,CAAC;QAC/B,SAAS;IACX;AACF;AAGO,MAAM,oBAAoB,OAC/B,aACA;IAEA,IAAI;QACF,IAAI,CAAC,yHAAA,CAAA,OAAI,CAAC,WAAW,EAAE;YACrB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,CAAA,GAAA,oNAAA,CAAA,gBAAa,AAAD,EAAE,yHAAA,CAAA,OAAI,CAAC,WAAW,EAAE;YACpC;YACA;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,aAAa;QAC3B,MAAM;IACR;AACF;AAGO,MAAM,kBAAkB,OAAO;IACpC,IAAI;QACF,IAAI,CAAC,yHAAA,CAAA,OAAI,CAAC,WAAW,EAAE;YACrB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,CAAA,GAAA,kNAAA,CAAA,cAAW,AAAD,EAAE,yHAAA,CAAA,OAAI,CAAC,WAAW,EAAE;IACtC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,aAAa;QAC3B,MAAM;IACR;AACF;AAGO,MAAM,qBAAqB,OAAO;IACvC,IAAI;QACF,IAAI,CAAC,yHAAA,CAAA,OAAI,CAAC,WAAW,EAAE;YACrB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,CAAA,GAAA,qNAAA,CAAA,iBAAc,AAAD,EAAE,yHAAA,CAAA,OAAI,CAAC,WAAW,EAAE;IACzC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,WAAW;QACzB,MAAM;IACR;AACF;AAGO,MAAM,oBAAoB,OAC/B,OACA;IAEA,IAAI;QACF,MAAM,iBAAiB,MAAM,CAAA,GAAA,qOAAA,CAAA,iCAA8B,AAAD,EAAE,yHAAA,CAAA,OAAI,EAAE,OAAO;QACzE,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,aAAa;QAC3B,MAAM;IACR;AACF;AAGO,MAAM,iBAAiB,OAC5B,OACA;IAEA,IAAI;QACF,MAAM,iBAAiB,MAAM,CAAA,GAAA,iOAAA,CAAA,6BAA0B,AAAD,EAAE,yHAAA,CAAA,OAAI,EAAE,OAAO;QACrE,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,aAAa;QAC3B,MAAM;IACR;AACF;AAGO,MAAM,kBAAkB;IAC7B,IAAI;QACF,MAAM,WAAW,IAAI,wNAAA,CAAA,qBAAkB;QACvC,MAAM,iBAAiB,MAAM,CAAA,GAAA,qNAAA,CAAA,kBAAe,AAAD,EAAE,yHAAA,CAAA,OAAI,EAAE;QACnD,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 1767, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/echomind2/src/components/layout/RootClientLayout.tsx"],"sourcesContent":["'use client'; // 標記此組件為客戶端組件\r\n\r\n// 導入必要的組件和函數\r\nimport { ThemeProvider } from \"@/components/providers/ThemeProvider\";\r\nimport ClientLayout from \"@/components/layout/ClientLayout\";\r\nimport { Toaster } from 'sonner';\r\nimport { useEffect } from 'react';\r\nimport { initializeAuthListener } from '@/lib/utils/auth';\r\nimport { AuthProvider } from '@/contexts/AuthContext';\r\n\r\n/**\r\n * RootClientLayout 組件的 Props 介面定義\r\n * @interface RootClientLayoutProps\r\n * @property {React.ReactNode} children - 子組件\r\n */\r\ninterface RootClientLayoutProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\n/**\r\n * 根客戶端布局組件\r\n * 提供主題、認證狀態和通知功能的全局配置\r\n * @param {RootClientLayoutProps} props - 組件屬性\r\n * @returns {JSX.Element} 渲染的組件\r\n */\r\nexport default function RootClientLayout({ children }: RootClientLayoutProps) {\r\n  useEffect(() => {\r\n    // 初始化認證監聽器，監聽用戶登入狀態變化\r\n    const unsubscribe = initializeAuthListener((user) => {\r\n      // 用戶狀態改變時的回調函數\r\n      console.log('認證狀態更新:', user ? '已登入' : '未登入');\r\n    });\r\n\r\n    // 組件卸載時清理認證監聽器\r\n    return () => {\r\n      if (unsubscribe) {\r\n        unsubscribe();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider\r\n      attribute=\"class\"\r\n      defaultTheme=\"system\"\r\n      enableSystem\r\n      disableTransitionOnChange\r\n    >\r\n      <AuthProvider>\r\n        <ClientLayout>\r\n          {children}\r\n        </ClientLayout>\r\n        <Toaster richColors position=\"top-right\" /> {/* 全局通知組件 */}\r\n      </AuthProvider>\r\n    </ThemeProvider>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;AARA,cAAc,cAAc;;;;;;;AAyBb,SAAS,iBAAiB,EAAE,QAAQ,EAAyB;;IAC1E,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,sBAAsB;YACtB,MAAM,cAAc,CAAA,GAAA,8HAAA,CAAA,yBAAsB,AAAD;0DAAE,CAAC;oBAC1C,eAAe;oBACf,QAAQ,GAAG,CAAC,WAAW,OAAO,QAAQ;gBACxC;;YAEA,eAAe;YACf;8CAAO;oBACL,IAAI,aAAa;wBACf;oBACF;gBACF;;QACF;qCAAG,EAAE;IAEL,qBACE,6LAAC,mJAAA,CAAA,gBAAa;QACZ,WAAU;QACV,cAAa;QACb,YAAY;QACZ,yBAAyB;kBAEzB,cAAA,6LAAC,kIAAA,CAAA,eAAY;;8BACX,6LAAC,+IAAA,CAAA,UAAY;8BACV;;;;;;8BAEH,6LAAC,2IAAA,CAAA,UAAO;oBAAC,UAAU;oBAAC,UAAS;;;;;;gBAAc;;;;;;;;;;;;AAInD;GA/BwB;KAAA","debugId":null}}]
}